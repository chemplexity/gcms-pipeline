function nistData = ExportNIST(data, sampleRow, retentionTimes)

% ------------------------------------------------------------------------
% Method      : ExportNIST()
% Description : saves peak data as a NIST formatted data structure
% ------------------------------------------------------------------------

% ---------------------------------------
% Data
% ---------------------------------------
nistData = struct(...
    'file_path',                [],...
    'file_name',                [],...
    'file_size',                [],...
    'compound_name',            [],...
    'compound_synonym',         {},...
    'compound_formula',         [],...
    'compound_mw',              [],...
    'compound_exact_mass',      [],...
    'compound_retention_time',  [],...
    'compound_retention_index', [],...
    'cas_id',                   [],...
    'nist_id',                  [],...
    'db_id',                    [],...
    'smiles',                   [],...
    'inchikey',                 [],...
    'ion_mode',                 [],...
    'collision_energy',         [],...
    'comments',                 [],...
    'num_peaks',                [],...
    'mz',                       [],...
    'intensity',                []);

for i=1:size(retentionTimes)

    % assuming the index should be based on ALL retention times from 
    % the original data and not just the peaks (so that it lines up
    % with mz)
    index = lookupTimeIndex(data(sampleRow).time, retentionTimes(i));
    channelData = data(sampleRow).channel(1, :);
    peakMassSpectra = data.intensity(index, :);
    
    nistData(i).mz = channelData;
    nistData(i).intensity = peakMassSpectra;
    nistData(i).compound_retention_time = retentionTimes(i);
    nistData(i).file_path = data(sampleRow).file_path;
    nistData(i).file_name = data(sampleRow).file_name;
    nistData(i).file_size = data(sampleRow).file_size;

    % ask about this
end 